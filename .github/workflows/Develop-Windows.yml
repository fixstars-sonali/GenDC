name:  Build, Test

on:
  push:
    branches:
      - '*'  # This will run the build and test jobs for every push on all branches

  pull_request:
    branches:
      - '*'  # This will run the build and test jobs for pull requests to all branches


jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4.7.1
        with:
         python-version: "3.11.4"

      - name : Install pkgconfig
        run : |
         choco install pkgconfiglite -y
      
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Install requirements
        run: |
         python -m pip install -r ${{ github.workspace}}\requirement.txt 

      - name: Disable Perl (remove from PATH)
        run: choco uninstall strawberryperl -n

      # - name: Set up vcpkg
      #   uses: marketplace/actions/setup-vcpkg@v1
      #   with:
      #     vcpkgGitCommitId: '2021-01-13'

      # - name: Setup vcpkg
      #   uses: lukka/run-vcpkg@v11
      #   with:
      #       # This one is not needed, as it is the default value anyway.
      #       vcpkgDirectory: '${{ github.workspace }}/vcpkg'
      #       vcpkgJsonGlob: '**/gendc_cpp/vcpkg.json'
      #       runVcpkgInstall: true

      - name: Checkout vcpkg
        uses: actions/checkout@v3
        with:
          repository: microsoft/vcpkg
          path: vcpkg
          depth: 0
      - name: Setup vcpkg
        run: |
          cd vcpkg 
          .\bootstrap-vcpkg.bat    
      - name: Check for existing cache
        id: cache_status
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}\vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
      - name: Install dependencies
        working-directory: gendc_cpp
        shell: cmd
        if: steps.cache_status.outputs.cache-hit != 'true'
        run: |
          set PATH=${{ github.workspace }}\vcpkg;%PATH%
          echo %PATH%
          vcpkg.exe install --x-install-root ${{ github.workspace }}\vcpkg_installed
      - name: Cache dependencies
        if: steps.cache_status.outputs.cache-hit != 'true'    
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}\vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
      - name: Build
        shell: cmd
        working-directory: gendc_cpp
        run: |
          set PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\bin;%PATH%
          set PKG_CONFIG_PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig\;%PKG_CONFIG_PATH%
          meson setup --prefix=${{ github.workspace }}\install build
          cd build
          meson install

      - name: meson setup
        working-directory: gendc_cpp
        run: |
         $PKG_CONFIG_PATH="${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig"
         meson setup ../build -Dtests=enabled --pkg-config-path="${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig" 
      
      - name: meson install
        working-directory: build
        run: |
         $PKG_CONFIG_PATH="${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig"
         meson install 